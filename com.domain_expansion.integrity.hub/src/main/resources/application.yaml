spring:
  application:
    name: hub-service

  datasource:
    url: ${HUB_DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: ${DEV_REDIS_HOST}
      port: 6379
      username: ${DEV_REDIS_USERNAME}
      password: ${DEV_REDIS_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true # sql 로깅
        format_sql: true # SQL 문 정렬하여 출력
        highlight_sql: true # SQL 문 색 부여
      database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${spring.application.name}-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        type.mapping: "hubDeleteEvent:com.domain_expansion.integrity.hub.events.HubDeleteEvent"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULTZONE}

springdoc:
  api-docs:
    enabled: true
    path: /hub-service/v3/api-docs
  swagger-ui:
    path: /hub-service/swagger-ui.html

server:
  port: 19093

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

